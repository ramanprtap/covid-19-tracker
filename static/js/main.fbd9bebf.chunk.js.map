{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableurl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchcountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","option","legends","display","titles","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbd9bebf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Cards_card__1B03B\",\"infected\":\"Cards_infected__1HGPg\",\"recovered\":\"Cards_recovered__-IEbJ\",\"deaths\":\"Cards_deaths__U7SuB\"};","import React from 'react';\r\nimport CountUp from 'react-countup';\r\n\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if (!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    return(\r\n        <div className=\"styles.container\">\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableurl = url; \r\n\r\n\r\n        if (country) {\r\n            changeableurl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {data:  {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableurl); \r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() =>{\r\n    let changaleUrl = url;\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n      const modifiedData = data.map((dailyData) => (\r\n          {\r\n              confirmed: dailyData.confirmed.total,\r\n              deaths:dailyData.deaths.total,\r\n              date:dailyData.reportDate,\r\n          }\r\n      ));\r\n      return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchcountries = async () => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        \r\n    }\r\n} ","import React, {useState, useEffect} from  'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\n\r\nconst Charts = ({data:{confirmed, recovered, deaths}, country}) => {\r\n    const[dailyData, setDailyData] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length != 0\r\n        ? ( \r\n        <Line \r\n            data={{\r\n                labels:dailyData.map(({date}) => date),\r\n                datasets:[{\r\n                   data: dailyData.map(({confirmed}) => confirmed),\r\n                   label: \"Infected\",\r\n                   borderColor:\"#333fff\",\r\n                   fill:true\r\n                },{\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: \"Deaths\",\r\n                    borderColor:\"red\",\r\n                    backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n                    fill:true\r\n                }],\r\n            }}\r\n        />) : null \r\n    );\r\n    console.log(confirmed, recovered, deaths)\r\n\r\n    const barChart =(\r\n        confirmed\r\n        ?(\r\n            <Bar\r\n                data={{\r\n                 labels: ['infected', 'Recovered', 'Deaths'],\r\n                 datasets:[{\r\n                     label:'People',\r\n                     backgroundColor:[\r\n                     'rgba(0, 0, 255, 0.5)',\r\n                     'rgba(0, 255, 0, 0.5)',\r\n                     'rgba(0, 0, 0, 0.5)' ],\r\n                     data:[confirmed.value, recovered.value, deaths.value]\r\n                 }]\r\n                }}  \r\n                option={{\r\n                    legends:{display: false},\r\n                    titles:{display:true, text:`Current state in ${country}`},\r\n                }}    \r\n            />\r\n        ) :  null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n          {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, {useState, useEffect} from  'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchcountries} from '../../api'\r\n\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect (() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchcountries());\r\n        }\r\n        fetchAPI();\r\n\r\n    }, [setFetchedCountries]);\r\n\r\n   \r\n\r\n\r\n    return(\r\n      <FormControl className={styles.FormControl}>\r\n          <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n              <option value=\"\">Global</option>\r\n              {fetchedCountries.map((country, i)=> <option key={i} value={country}>{country}</option>)}\r\n          </NativeSelect>\r\n      </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Cards, Charts, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data:{},\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange =  async (country) =>{\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country: country});\r\n        console.log(fetchedData);\r\n    }\r\n\r\n    render(){\r\n        const { data, country } = this.state\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Charts data={data} country={country}/>\r\n                \r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default App; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2B_-R\",\"image\":\"App_image__26CNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3jK0T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2BZ6k\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}